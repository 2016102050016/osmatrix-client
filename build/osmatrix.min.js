var OSMatrix=(function(w){"use strict";var $=w.jQuery,PROXY_URL="/cgi-bin/proxy.cgi?url=",API_URL="http://lemberg.geog.uni-heidelberg.de:50684/osmatrix/",MODE={timestamp:1,diff:2};function Osmatrix(){}
function get(url,callback){$.getJSON(PROXY_URL+encodeURIComponent(url),null,callback);}
function getCapabilities(callback){get(API_URL+'api',callback);}
function getLegend(mode,layer,callback){get(API_URL+'map/'+layer+'/'+mode+'/legend',callback);}
function getLayerUrl(mode,layer,times){if(MODE[mode]===MODE.timestamp){return API_URL+'map/'+layer+'/timestamp/'+times[0]+'/{z}/{x}/{y}';}else{return API_URL+'map/'+layer+'/diff/{z}/{x}/{y}?start='+times[0]+'&end='+times[1];}}
function getFeatureInfoFromPoint(attribute,latlng,callback){get(API_URL+'api/attributes/'+attribute+'?proj=4326&lat='+latlng.lat+'&lon='+latlng.lng,callback);}
Osmatrix.prototype.getCapabilities=getCapabilities;Osmatrix.prototype.getLegend=getLegend;Osmatrix.prototype.getLayerUrl=getLayerUrl;Osmatrix.prototype.getFeatureInfoFromPoint=getFeatureInfoFromPoint;return new Osmatrix();}(window));var EventEmitter=(function(){"use strict";function eventEmitter(){this.events={};}
function register(ev,callback){if(!this.events[ev]){this.events[ev]=[];}
this.events[ev].push(callback);}
function emit(ev,eventObj){if(this.events[ev]){for(var i=0,len=this.events[ev].length;i<len;i++){this.events[ev][i](eventObj);}}}
eventEmitter.prototype.register=register;eventEmitter.prototype.emit=emit;return eventEmitter;})();var Permalink=(function(w){'use strict';var state,history=w.history;function Permalink(){}
function update(mode,layer,times,zoom,lon,lat){if(!state){state={};}
if(mode){state.mode=mode;}
if(layer){state.layer=layer;}
if(times){state.times=times;}
if(zoom){state.zoom=zoom;}
if(lon){state.lon=lon;}
if(lat){state.lat=lat;}
var url="#"+state.mode+"/"+state.layer+"/"+((state.times.length===1)?state.times[0]+"/":"")+state.zoom+"/"+state.lon+"/"+state.lat+((state.times.length===2)?"?start="+state.times[0]+"&end="+state.times[1]:"");if(history.pushState){history.pushState(state,null,url);}else{w.location=url;return false;}}
function parse(url){if(url.indexOf('#')!==-1){var urlState=url.split('#')[1].split('/');state={};state.mode=urlState[0];state.layer=urlState[1];state.times=[];if(urlState[0]==='timestamp'){state.times.push(urlState[2]);state.zoom=urlState[3];state.lng=urlState[4];state.lat=urlState[5];}else{var times=urlState[4].split('?')[1].split('&');state.zoom=urlState[2];state.lng=urlState[3];state.lat=urlState[4].split('?')[0];for(var i=0,len=times.length;i<len;i++){state.times.push(times[i].split('=')[1]);}}}
return state;}
Permalink.prototype.update=update;Permalink.prototype.parse=parse;return new Permalink();})(window);var Geolocator=(function(w){"use strict";function Geolocator(){}
function locate(locationSuccess,locationError,locationNotSupported){if(w.navigator.geolocation){w.navigator.geolocation.getCurrentPosition(locationSuccess,locationError);}else{locationNotSupported();}}
Geolocator.prototype.locate=locate;return new Geolocator();}(window));var Geocoder=(function(window){"use strict";var $=window.jQuery,NOMINATIM_URL='http://nominatim.openstreetmap.org/search?format=json&polygon=0&addressdetails=1&viewbox=5.52,55.26,15.18,47.27&bounded=1';function Geocoder(){}
function find(address,callback){$.getJSON('/cgi-bin/proxy.cgi?url='+encodeURIComponent(NOMINATIM_URL+'&q='+address.replace(/\s+/g,'+')),null,callback);}
Geocoder.prototype.find=find;return new Geocoder();}(window));var Map=(function(){"use strict";function map(container){var self=this;function emitMapChangedEvent(e){self.emit('map:changed',{zoom:self.theMap.getZoom(),lat:self.theMap.getCenter().lat,lon:self.theMap.getCenter().lng});}
function emitLayerLoadStartEvent(){self.emit('layer:loadStart');}
function emitLayerLoadEndEvent(){self.emit('layer:loadEnd');}
function handleLayerAddEvent(e){e.layer.on('loading',emitLayerLoadStartEvent);e.layer.on('load',emitLayerLoadEndEvent);}
function emitUserClickEvent(e){self.emit('user:click',e.latlng);}
this.theMap=L.map(container,{center:[51.505,-0.09],zoom:9,maxBounds:new L.LatLngBounds(new L.LatLng(34.66682,-10.53538),new L.LatLng(61.07390,38.00957)),zoomControl:false});var tiledLayer=new L.StamenTileLayer("toner-lite");this.theMap.addLayer(tiledLayer);this.theMap.on('zoomend',emitMapChangedEvent);this.theMap.on('moveend',emitMapChangedEvent);this.theMap.on('layeradd',handleLayerAddEvent);this.theMap.on('click',emitUserClickEvent);}
function moveTo(lonlat,zoom){if(lonlat){this.theMap.panTo(lonlat);}
if(zoom){this.theMap.setZoom(zoom);}}
function updateMatrixLayer(mode,layerUrl){this.updateFeatureInfoLayer();if(this.matrixLayer){this.theMap.removeLayer(this.matrixLayer);}
this.matrixLayer=L.tileLayer(layerUrl,{maxZoom:18});this.theMap.addLayer(this.matrixLayer);this.emit('map:changed',{mode:mode.mode,layer:mode.layer,times:mode.times,zoom:this.theMap.getZoom(),lat:this.theMap.getCenter().lat,lon:this.theMap.getCenter().lng});}
function updateFeatureInfoLayer(features,colors){if(this.featureInfoLayer){this.theMap.removeLayer(this.featureInfoLayer);}
if(features&&colors){this.featureInfoLayer=L.geoJson(null,{style:function(feature){return{fillColor:feature.properties.color,fillOpacity:0.7,color:'white',opacity:1,weight:2};}});this.theMap.addLayer(this.featureInfoLayer);for(var i=0,len=features.result.length;i<len;i++){var color=colors[i];this.featureInfoLayer.addData({"type":"Feature","properties":{"color":color},"geometry":features.result[i].geometry});}}}
map.prototype=new EventEmitter();map.prototype.constructor=map;map.prototype.moveTo=moveTo;map.prototype.updateMatrixLayer=updateMatrixLayer;map.prototype.updateFeatureInfoLayer=updateFeatureInfoLayer;return map;}());var Ui=(function(w){'use strict';var $=w.jQuery,d3=w.d3,TOOLS={geolocate:'geolocate',layer:'layer',geocode:'searchPlace',legend:'legend',featureInfo:'featureInfo',message:'message'},theInterface;function setLoadingState(state,tool){if(state){$('#'+tool+' button').addClass('loading');$('#'+tool+' .spinner').addClass('loading');}else{$('#'+tool+' button').removeClass('loading');$('#'+tool+' .spinner').removeClass('loading');}}
function toggleActiveState(tool){$('.tool > button').not('#'+tool+' > button').removeClass('active');$('.tool > .content').not('#'+tool+' > .content').removeClass('active');$('#map').removeClass('showSidebar');$('#sidebar').removeClass('active');$('#'+tool+' > button').toggleClass('active');$('#'+tool+' > .content').toggleClass('active');if($('#'+tool).parent().attr('id')==='sidebar'&&$('#'+tool+' > button').hasClass('active')){$('#map').addClass('showSidebar');$('#sidebar').addClass('active');}}
function handleButtonClick(e){var toolId=$(e.currentTarget).parent().attr('id');if(toolId===TOOLS.geolocate){setLoadingState(true,TOOLS.geolocate);theInterface.emit('ui:geolocationRequest');}else{toggleActiveState(toolId);}}
function hideMessage(){$('#'+TOOLS.message).hide();}
function displayMessage(type,text){$('#'+TOOLS.message).removeClass().addClass(type);$('#'+TOOLS.message+' h3').text(type.charAt(0).toUpperCase()+type.slice(1));$('#'+TOOLS.message+' p').text(text);$('#'+TOOLS.message+' > #actions > button').click(hideMessage);$('#'+TOOLS.message).show();}
function stopGeolocation(text){setLoadingState(false,TOOLS.geolocate);if(text){displayMessage('error',text);}}
function deactivateGeolocation(text){stopGeolocation();$(TOOLS.geolocate).hide();if(text){displayMessage('error',text);}}
function handleFormType(e){var key=e.which||e.keyCode;if(key===13){setLoadingState(true,TOOLS.geocode);theInterface.emit('ui:geocodeRequest',$(e.currentTarget).val());return false;}}
function handleGeocodeLinkClick(e){theInterface.emit('ui:geocodeLinkClick',$(e.currentTarget).attr('href'));if($('#'+TOOLS.geocode+' > button').hasClass('active')){$('#'+TOOLS.geocode+' > button').click();}
return false;}
function updateGeocodeResultList(permaLink,results){var queryParams='?'+permaLink.split('?')[1]||'',linkBase=((permaLink.indexOf('?')!==-1)?permaLink.substring(0,permaLink.indexOf('?')):permaLink.substring(0)).split('#')[0],mapState=((permaLink.indexOf('?')!==-1)?permaLink.substring(0,permaLink.indexOf('?')):permaLink.substring(0)).split('#')[1].split('/');if(results){$('#'+TOOLS.geocode+' ul.resultList').children().remove();if(results.length>0){for(var i=0,len=results.length;i<len;i++){var address=results[i];mapState[mapState.length-1]=parseFloat(address.lat);mapState[mapState.length-2]=parseFloat(address.lon);var address=results[i];var link=linkBase+"#"+mapState.join("/")+queryParams;$('#'+TOOLS.geocode+' ul.resultList').append('<li><a href="'+link+'">'+address.display_name+'</a></li>');}}else{$('#'+TOOLS.geocode+' ul.resultList').append('<li class="noResult">No results matching your query have been found.</li>');}
$('#'+TOOLS.geocode+' ul.resultList li a').click(handleGeocodeLinkClick);}else{}
setLoadingState(false,TOOLS.geocode);}
function handleLayerModeToogle(e){$(e.currentTarget).siblings().removeClass('btn-success active');$(e.currentTarget).addClass('btn-success active');var timeElements=$('#'+TOOLS.layer+' input[name="timestamp"]');for(var i=0,len=timeElements.length;i<len;i++){if((i===0&&this.value==='diff')||i===len-1){timeElements[i].checked=true;}else{timeElements[i].checked=false;}}}
function handleTimeStampChange(){var mode=$('#'+TOOLS.layer+' #layerMode button.active').val();var timeElements=$('#'+TOOLS.layer+' input[name="timestamp"]:checked');if((mode==='diff'&&timeElements.length>2)||mode==='timestamp'){for(var i=0,len=timeElements.length;i<len;i++){if(timeElements[i].value!=this.value){timeElements[i].checked=false;}}}}
function initializeLayerSwitcher(c){for(var i=0,len=c.attributes.length;i<len;i++){$('#'+TOOLS.layer+' select#characteristics').append('<option value="'+c.attributes[i].name+'">'+c.attributes[i].title+'</option>');}
for(var i=0,len=c.timestamps.length;i<len;i++){$('#'+TOOLS.layer+' fieldset#timestamps').append('<label class="checkbox"><input '+((i===len-1)?'checked="checked"':'')+' type="checkbox" name="timestamp" value="'+c.timestamps[i].id+'">'+c.timestamps[i].timestamp+'</label>');}
$('#'+TOOLS.layer+' input[name="timestamp"]').change(handleTimeStampChange);}
function setLayerSwitcherToMode(state){if(state){$('#'+TOOLS.layer+' .btn-group button[value="'+state.mode+'"]').click();$('#'+TOOLS.layer+' #characteristics').val(state.layer);var times=$('#'+TOOLS.layer+' input[name="timestamp"]');for(var i=0,len=times.length;i<len;i++){times[i].checked=(state.times.indexOf(times[i].value)!=-1);}}
$('#'+TOOLS.layer+' form').submit();$('header').addClass('hide');}
function handleLayerSubmit(){var layer=$('#'+TOOLS.layer+' select#characteristics').val();var mode=$('#'+TOOLS.layer+' #layerMode button.active').val();var times=[];var timeElements=$('#'+TOOLS.layer+' input[name="timestamp"]');for(var i=0,len=timeElements.length;i<len;i++){if(timeElements[i].checked){times.push(timeElements[i].value)}}
if((mode==='diff'&&times.length===2)||mode==='timestamp'){theInterface.emit('ui:layerUpdate',{mode:mode,layer:layer,times:times});}else{displayMessage("warning","Please select two timestamps for comparison.");}
if($('#'+TOOLS.layer+' > button').hasClass('active')){$('#'+TOOLS.layer+' > button').click();}
return false;}
function setLayerLoadingState(state){setLoadingState(state,TOOLS.layer);}
function updateLegend(l){$('#toolbox > h2').text(l.attribute.title);$('#'+TOOLS.legend+' .content #labels').children().remove();$('#'+TOOLS.legend+' .content h3').text(l.attribute.title);$('#'+TOOLS.legend+' .content p.desc').text(l.attribute.description);for(var i=0,len=l.labels.length;i<len;i++){$('#'+TOOLS.legend+' .content #labels').append('<div class="legendItem"><span class="graphic" style="background-color: '+l.labels[i].color+';"></span>'+l.labels[i].label+'</div>');}}
function updateFeatureInfo(info,colors){$('#'+TOOLS.featureInfo+' #chart').empty();if(info&&colors){$('#'+TOOLS.featureInfo+' h3').text(info.attribute.title);$('#'+TOOLS.featureInfo+' p').text(info.attribute.description);var chartArea,WIDTH=$('#'+TOOLS.featureInfo+' #chart').width(),HEIGHT=$('#'+TOOLS.featureInfo+' #chart').height(),MARGIN_TOP=10,MARGIN_LEFT=60,MARGIN_BOTTOM=60,min,max,xScale,yScale,xDomain=[],line=d3.svg.line().x(function(d){return xScale(d.timestamp);}).y(function(d){return yScale(d.value);}).interpolate("linear"),stddevArea=d3.svg.area().x(function(d){return xScale(d.timestamp);}).y0(function(d){return yScale(d.lower);}).y1(function(d){return yScale(d.upper);}),averages=[],stddev=[];for(var key in info.stats){min=d3.min([info.stats[key].min,min]);max=d3.max([info.stats[key].max,max]);}
if(info.attribute==='DateOfLatestEdit'||info.attribute==='dateOfEldestEdit'){MARGIN_LEFT+=20;}
else{min=0;}
for(var i=0,len=info.timestamps.length;i<len;i++){xDomain.push(info.timestamps[i].timestamp.substring(0,info.timestamps[i].timestamp.lastIndexOf('-')));}
xScale=d3.scale.ordinal().domain(xDomain).rangePoints([MARGIN_LEFT+10,WIDTH-20]);yScale=d3.scale.linear().domain([max,min]).range([MARGIN_TOP+10,(HEIGHT-MARGIN_BOTTOM)]);chartArea=d3.select("div#chart").append("svg").attr("width",WIDTH).attr("height",HEIGHT);for(var key in info.stats){averages.push({"timestamp":key,"value":info.stats[key].avg});stddev.push({"timestamp":key,"upper":info.stats[key].avg+info.stats[key].std,"lower":info.stats[key].avg-info.stats[key].std});}
chartArea.append("svg:path").datum(stddev).attr("fill",'#f0f0f0').attr("d",stddevArea);chartArea.append("svg:path").attr("d",line(averages)).attr("stroke",'#bbb').attr("stroke-width",2).attr("fill","transparent");chartArea.selectAll(".yRule").data(yScale.ticks(5)).enter().append("line").attr("class","yRule").attr("x1",MARGIN_LEFT).attr("x2",WIDTH).attr("y1",yScale).attr("y2",yScale).style("stroke","#ccc");chartArea.append("svg:line").attr("class","yBase").attr("x1",MARGIN_LEFT).attr("x2",WIDTH).attr("y1",(HEIGHT-MARGIN_BOTTOM)).attr("y2",(HEIGHT-MARGIN_BOTTOM)).style("stroke","#000").style("stroke-width","1");chartArea.selectAll(".yLabel").data(yScale.ticks(5)).enter().append("svg:text").attr("class","yLabel").text(function(d){if(info.attribute=='DateOfLatestEdit'||info.attribute=='dateOfEldestEdit'){var date=new Date(d);var m=(date.getMonth()+1)<10?"0"+(date.getMonth()+1):(date.getMonth()+1);return date.getFullYear()+"-"+m;}else{return d;}}).attr("x",MARGIN_LEFT-10).attr("y",yScale).attr("text-anchor","end");chartArea.selectAll(".xTicks").data(xDomain).enter().append("svg:line").attr("class","xTicks").attr("x1",function(d){return xScale(d);}).attr("x2",function(d){return xScale(d);}).attr("y1",HEIGHT-MARGIN_BOTTOM).attr("y2",HEIGHT-MARGIN_BOTTOM+5).style("stroke","#000");chartArea.selectAll(".xLabel").data(xDomain).enter().append("svg:text").attr("class","xLabel").text(function(d){return d;}).attr("x",function(d){return xScale(d);}).attr("y",HEIGHT-MARGIN_BOTTOM+10).attr("text-anchor","top").attr("style","writing-mode: tb;");for(var i=0,len=info.result.length;i<len;i++){var item=info.result[i],value=[];for(var key in item.values){value.push({"timestamp":key,"value":item.values[key]});}
chartArea.append("svg:path").attr("d",line(value)).attr("stroke",colors[i]).attr("fill","transparent");chartArea.selectAll("path"+item.cell_id).data(value).enter().append("svg:circle").attr("class","path"+item.cell_id).attr("cx",function(d){return xScale(d.timestamp.substring(0,d.timestamp.lastIndexOf('-')));}).attr("cy",function(d){return yScale(d.value);}).attr("r",3).attr("fill","#ffffff").attr("stroke",colors[i]).attr("stroke-width",2);}
if(!$('#'+TOOLS.featureInfo+'> .content').hasClass('active')){$('#'+TOOLS.featureInfo+' button').click();}}else{$('#'+TOOLS.featureInfo+' h3').text('');$('#'+TOOLS.featureInfo+' p').text('Click on the map to get information on the temporal evolution of the selected characteristic in the area of interest.');}
setLoadingState(false,TOOLS.featureInfo);}
function setFeatureInfoLoadingState(state){setLoadingState(state,TOOLS.featureInfo);}
function Ui(){$('.tool > button').click(handleButtonClick);$('#'+TOOLS.layer+' .btn-group button').click(handleLayerModeToogle);$('#'+TOOLS.geocode+' input[type="text"]').keypress(handleFormType);$('#'+TOOLS.layer+' form').submit(handleLayerSubmit);hideMessage();}
Ui.prototype=new EventEmitter();Ui.prototype.constructor=Ui;Ui.prototype.updateGeocodeResultList=updateGeocodeResultList;Ui.prototype.initializeLayerSwitcher=initializeLayerSwitcher;Ui.prototype.setLayerSwitcherToMode=setLayerSwitcherToMode;Ui.prototype.stopGeolocation=stopGeolocation;Ui.prototype.deactivateGeolocation=deactivateGeolocation;Ui.prototype.updateLegend=updateLegend;Ui.prototype.updateFeatureInfo=updateFeatureInfo;Ui.prototype.setLayerLoadingState=setLayerLoadingState;Ui.prototype.setFeatureInfoLoadingState=setFeatureInfoLoadingState;theInterface=new Ui();return theInterface;}(window));var Controller=(function(w){'use strict';var $=w.jQuery,ui=w.Ui,perma=w.Permalink,geolocator=w.Geolocator,geocoder=w.Geocoder,osmatrix=w.OSMatrix,Map=w.Map,HIGHLIGHT_COLORS=['#E41A1C','#377EB8','#4DAF4A','#984EA3','#FF7F00','#FFFF33','#A65628'],map;function handleGeolocateSuccess(position){map.moveTo([position.coords.latitude,position.coords.longitude]);ui.stopGeolocation();}
function handleGeolocateError(error){switch(error.code){case error.UNKNOWN_ERROR:ui.stopGeolocation('The location acquisition process failed');break;case error.PERMISSION_DENIED:ui.deactivateGeolocation();break;case error.POSITION_UNAVAILABLE:ui.stopGeolocation('The position of the device could not be determined. One or more of the location providers used in the location acquisition process reported an internal error that caused the process to fail entirely.');break;case error.TIMEOUT:ui.stopGeolocation('The location acquisition timed out');break;}}
function handleGeolocateNoSupport(){ui.deactivateGeolocation('Geolocation API is not supported by your browser.');}
function handleGeocodeResults(results){ui.updateGeocodeResultList(w.document.URL,results);}
function handleGeolocationRequest(){geolocator.locate(handleGeolocateSuccess,handleGeolocateError,handleGeolocateNoSupport);}
function handleGeocodeRequest(address){geocoder.find(address,handleGeocodeResults);}
function handleGeocodeLink(link){var permaLinkState=perma.parse(link);map.moveTo([permaLinkState.lat,permaLinkState.lng]);}
function handleLayerUpdate(layerInfo){osmatrix.getLegend(layerInfo.mode,layerInfo.layer,handleLegend);map.updateMatrixLayer(layerInfo,osmatrix.getLayerUrl(layerInfo.mode,layerInfo.layer,layerInfo.times));ui.updateFeatureInfo();}
function handleMapLoadStart(){ui.setLayerLoadingState(true);}
function handleMapLoadEnd(){ui.setLayerLoadingState(false);}
function handleMapChanged(mapState){perma.update(mapState.mode,mapState.layer,mapState.times,mapState.zoom,mapState.lon,mapState.lat);}
function handleUserMapClick(latlng){ui.setFeatureInfoLoadingState(true);var layer=perma.parse(w.document.URL).layer;osmatrix.getFeatureInfoFromPoint(layer,latlng,handleFeatureInfoResult);}
function handleMatrixCapabilities(capabilities){ui.initializeLayerSwitcher(capabilities);initializeTheMap();}
function handleLegend(results){ui.updateLegend(results);}
function initializeTheMatrix(){osmatrix.getCapabilities(handleMatrixCapabilities);}
function initializeTheMap(){var permaLink=perma.parse(w.document.URL);if(permaLink){map.moveTo([permaLink.lat,permaLink.lng],permaLink.zoom);}else{handleGeolocationRequest();}
ui.setLayerSwitcherToMode(permaLink);}
function handleFeatureInfoResult(result){map.updateFeatureInfoLayer(result,HIGHLIGHT_COLORS);ui.updateFeatureInfo(result,HIGHLIGHT_COLORS);}
function initialize(){map=new Map('map');map.register('layer:loadStart',handleMapLoadStart);map.register('layer:loadEnd',handleMapLoadEnd);map.register('map:changed',handleMapChanged);map.register('user:click',handleUserMapClick);ui.register('ui:geolocationRequest',handleGeolocationRequest);ui.register('ui:geocodeRequest',handleGeocodeRequest);ui.register('ui:geocodeLinkClick',handleGeocodeLink);ui.register('ui:layerUpdate',handleLayerUpdate);initializeTheMatrix();}
function Controller(){}
Controller.prototype.initialize=initialize;return new Controller();}(window));window.onload=Controller.initialize;